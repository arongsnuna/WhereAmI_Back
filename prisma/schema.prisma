// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//Area 테이블 
model Area {
  id       Int        @id @default(autoincrement()) @map("area_id")
  siDo     String
  siGu     String
  Landmark Landmark[]
}

//Landmark 테이블
model Landmark {
  id        Int    @id @default(autoincrement()) @map("landmark_id")
  name      String @unique @map("landmark_name") @db.VarChar(255)
  address   String @db.VarChar(255)
  imagePath String @map("image_path")
  fileName  String @map("file_name")
  areaId    Int    @map("area_id")
  area      Area   @relation(fields: [areaId], references: [id])

  bookmarks Bookmark[]
}

//User 테이블
model User {
  id          String  @id @default(uuid()) @map("user_id")
  userName    String  @unique @map("user_name") @db.VarChar(255)
  email       String  @db.VarChar(255)
  password    String? @db.VarChar(255)
  profilePath String? @map("profile_path")
  description String?

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @map("updated_at") @db.Timestamp()
  deletedAt DateTime? @map("deleted_at") @db.Timestamp()

  bookmarks Bookmark[]
  scheduler Scheduler[]
}

//Bookmark 모델
model Bookmark {
  id         Int      @id @default(autoincrement()) @map("bookmark_id")
  landmarkId Int      @map("landmark_id") 
  userId     String   @map("user_id")
  createdAt  DateTime @default(now()) @map("created_at")
  status     Boolean  @default(true)

  landmark Landmark @relation(fields: [landmarkId], references: [id])
  user     User     @relation(fields: [userId], references: [id])
}

//Schedule 모델
model Scheduler {
  id        Int       @id @default(autoincrement()) @map("scheduler_id")
  title     String 
  startDate DateTime  @db.Timestamp()
  endDate   DateTime  @db.Timestamp()
  schedule  String[]
  userId    String    @map("user_id")

  user      User      @relation(fields: [userId], references: [id])
}
